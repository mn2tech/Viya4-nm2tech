<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="content-type" content="text/html; charset=utf-8">
        <link rel="stylesheet" type="text/css" href="sas.css"/>
        <title>Restore Scripts</title>
    </head>
    <body>
        <h1 id="140228096910624restore-scripts">Restore Scripts</h1>
<h2 id="140228096910624overview">Overview</h2>
<p>This README file contains information about the execution of scripts that are potentially required for restoring the SAS Viya Platform from a backup.</p>
<h2 id="140228096910624append-the-execute-permissions-to-scripts">Append the Execute Permissions to Scripts</h2>
<p>To execute the scripts described in this README, append the execute permission by running the following command.</p>
<pre class="highlight"><code class="language-bash">chmod +x ./sas-backup-pv-copy-cleanup.sh ./scale-up-cas.sh ./sas-backup-pv-copy-cleanup-using-pvcs.sh ./sas-backup-pv-cleanup.sh</code></pre>

<h2 id="140228096910624clean-up-cas-persistent-volume-claims">Clean Up CAS Persistent Volume Claims</h2>
<p>Persistent volumes claims (PVCs) are used by the CAS server to restore CAS data. To clean up the CAS PVCs after the restore job has completed,
execute the sas-backup-pv-copy-cleanup.sh or the sas-backup-pv-copy-cleanup-using-pvcs.sh bash script.
Both scripts have three arguments: namespace, operation to perform, and a comma-separated list of CAS instances or persistent volume claims.
If you are attempting a restore after a successful SAS Viya 3.x to SAS Viya 4 migration, method 2 is recommended.</p>
<ul>
<li><strong>Warning:</strong> Both scripts contain kubectl commands. Ensure that the intended namespace is specified as a parameter so that the cleanup operations target the correct deployment namespace.</li>
</ul>
<h3 id="140228096910624method-1-use-a-list-of-cas-instances">Method 1 - Use a List of CAS instances</h3>
<pre class="highlight"><code class="language-bash">./sas-backup-pv-copy-cleanup.sh [namespace] [operation] "[CAS instances list]"</code></pre>

<p>Here is an example:</p>
<pre class="highlight"><code class="language-bash">./sas-backup-pv-copy-cleanup.sh viya04 remove "default"</code></pre>

<p><strong>Note:</strong> The default CAS instance name is &ldquo;default&rdquo; if the user has not changed it.</p>
<p>Use the following command to determine the name of the CAS instances.</p>
<pre class="highlight"><code class="language-bash">kubectl -n name-of-namespace get casdeployment -L 'casoperator.sas.com/instance'</code></pre>

<p>Verify that the output for the command contains the name of the CAS instances. Here is an example of the output:</p>
<pre class="highlight"><code class="language-bash">test.host.com&gt; kubectl -n viya04 get casdeployment -L 'casoperator.sas.com/instance'
NAME      AGE   INSTANCE
default   14h   default</code></pre>

<p>In this example, the CAS instance is named &ldquo;default&rdquo;. If the instance value in the output is empty, use &ldquo;default&rdquo; as the instance value.</p>
<h3 id="140228096910624method-2-use-a-list-of-persistent-volume-claims">Method 2 - Use a List of Persistent Volume Claims</h3>
<p>To get the list of persistent volume claims for CAS instances, execute the following command.</p>
<pre class="highlight"><code class="language-bash">kubectl -n name-of-namespace get pvc -l 'sas.com/backup-role=provider,app.kubernetes.io/part-of=cas'</code></pre>

<p>Verify that the output contains the persistent volume claims.</p>
<pre class="highlight"><code class="language-bash">test.host.com&gt; kubectl -n viya04 get pvc -l 'sas.com/backup-role=provider,app.kubernetes.io/part-of=cas'
NAME                              STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE
cas-acme-default-data             Bound    pvc-6c4b3b65-cc11-4757-ac00-059d8e19f307   8Gi        RWX            nfs-client     20h
cas-acme-default-permstore        Bound    pvc-1a7cc621-5770-4e5d-b829-46eaad433460   100Mi      RWX            nfs-client     20h
cas-cyberdyne-default-data        Bound    pvc-cd5c173a-9bcf-4649-bea3-ea463930c9b4   8Gi        RWX            nfs-client     20h
cas-cyberdyne-default-permstore   Bound    pvc-253ff153-f309-4700-bef1-e041f63a7810   100Mi      RWX            nfs-client     20h
cas-default-data                  Bound    pvc-52d98061-d296-40f0-92e9-eaa34ca856c5   8Gi        RWX            nfs-client     21h
cas-default-permstore             Bound    pvc-cd8c3e86-a848-4029-9456-5841c85b15fd   100Mi      RWX            nfs-client     21h</code></pre>

<p>Select list of data and permstore persistent volume claim for a CAS instance.</p>
<pre class="highlight"><code class="language-bash">./sas-backup-pv-copy-cleanup-using-pvcs.sh [namespace] [operation] "[PVCs]"</code></pre>

<p>Here is an example:</p>
<pre class="highlight"><code class="language-bash">./sas-backup-pv-copy-cleanup-using-pvcs.sh viya04 remove "cas-default-data,cas-default-permstore"</code></pre>

<h3 id="140228096910624method-3-use-the-sas-backup-pv-cleanupsh-script">Method 3 - Use the sas-backup-pv-cleanup.sh Script</h3>
<p>To remove data from the CAS PVCs after the restore job is completed, execute the sas-backup-pv-cleanup.sh script.</p>
<p>To retrieve the list of persistent volume claims (PVCs) for the source data, run the following command:</p>
<pre class="highlight"><code class="language-bash">kubectl -n name-of-namespace get pvc -l 'sas.com/backup-role=provider,app.kubernetes.io/part-of=cas'</code></pre>

<p>Verify that the output contains the persistent volume claims.</p>
<pre class="highlight"><code class="language-bash">test.host.com&gt; kubectl -n viya04 get pvc -l 'sas.com/backup-role=provider,app.kubernetes.io/part-of=cas'
NAME                    STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS                    VOLUMEATTRIBUTESCLASS   AGE
cas-default-data        Bound    pvc-5feb5df5-daf9-4100-b998-64d48e221861   8Gi        RWX            nfs-client                      &lt;unset&gt;                 2d1h
cas-default-permstore   Bound    pvc-29d9ba36-7da5-4870-b7ec-719811f41caa   100Mi      RWX            nfs-client                      &lt;unset&gt;                 2d1h
</code></pre>

<p>In the command below, replace &ldquo;[PVCs]&rdquo; with the PVC names from the NAME column in the list above</p>
<pre class="highlight"><code class="language-bash">./sas-backup-pv-cleanup.sh [namespace] "[PVCs]"</code></pre>

<p>Here is an example:</p>
<pre class="highlight"><code class="language-bash">./sas-backup-pv-cleanup.sh viya04 "cas-default-data,cas-default-permstore"</code></pre>

<h2 id="140228096910624copy-backup-data-to-and-from-backup-persistent-volume-claims">Copy Backup Data to and from Backup Persistent Volume Claims</h2>
<p>You can also use a Kubernetes job (sas-backup-pv-copy-cleanup-job) to copy backup data to and from the backup persistent volume claims like sas-common-backup-data and sas-cas-backup-data.</p>
<h3 id="140228096910624method-1-use-a-list-of-cas-instances_1">Method 1 -  Use a List of CAS instances</h3>
<ol>
<li>
<p>To create a copy job from the cronjob sas-backup-pv-copy-cleanup-job, execute the sas-backup-pv-copy-cleanup.sh script with three arguments: namespace,
 operation to perform, and a comma-separated list of CAS instances.</p>
<pre class="highlight"><code class="language-bash">./sas-backup-pv-copy-cleanup.sh [namespace] [operation] "[CAS instances list]"</code></pre>

<p>Here is an example:</p>
<pre class="highlight"><code class="language-bash">./sas-backup-pv-copy-cleanup.sh viya04 copy "default"</code></pre>

<p><strong>Note:</strong> The default CAS instance name is &ldquo;default&rdquo; if the user hasn&rsquo;t changed it.</p>
</li>
<li>
<p>The script creates a copy job for each CAS Instance that is included in the comma-separated list of CAS instances. Check for the sas-backup-pv-copy-job pod that is created for each individual CAS Instance</p>
<pre class="highlight"><code class="language-bash">kubectl -n name-of-namespace get pod | grep -i sas-backup-pv-copy</code></pre>

<p>If you do not see the results you expect, see the console output of the sas-backup-pv-copy-cleanup.sh script.</p>
</li>
</ol>
<h3 id="140228096910624method-2-use-a-list-of-persistent-volume-claims_1">Method 2 -  Use a List of Persistent Volume Claims</h3>
<ol>
<li>
<p>To create a copy job from the cronjob sas-backup-pv-copy-cleanup-job, execute the sas-backup-pv-copy-cleanup-using-pvcs.sh
script with three arguments: namespace, operation to perform, and the backup persistent volume claim particular to the CAS instance.</p>
<p>To get the list of backup persistent volume claims for CAS instances, execute the following command.</p>
<pre class="highlight"><code class="language-bash">kubectl -n name-of-namespace get pvc -l 'sas.com/backup-role=storage,app.kubernetes.io/part-of=cas'</code></pre>

<p>Verify that the output contains the name of backup persistent volume claim particular to the cas instances.</p>
<pre class="highlight"><code class="language-bash">test.host.com&gt; kubectl -n viya04 get pvc -l 'sas.com/backup-role=storage,app.kubernetes.io/part-of=cas'
NAME                                    STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE
sas-cas-backup-data                     Bound    pvc-3b16a5c0-b4af-43a1-95f7-53aa30103a59   8Gi        RWX            nfs-client     21h
sas-cas-backup-data-acme-default        Bound    pvc-ceb3f86d-c0da-419b-bc06-825a6cddb5d9   4Gi        RWX            nfs-client     21h
sas-cas-backup-data-cyberdyne-default   Bound    pvc-306f6b28-7d5a-4769-885c-b21d3b734207   4Gi        RWX            nfs-client     21h</code></pre>

<p>Select backup persistent volume claim for a CAS instance.</p>
<pre class="highlight"><code class="language-bash">./sas-backup-pv-copy-cleanup-using-pvcs.sh [namespace] [operation] "[PVC]"</code></pre>

<p>Here is an example:</p>
<pre class="highlight"><code class="language-bash">./sas-backup-pv-copy-cleanup-using-pvcs.sh viya04 copy "sas-cas-backup-data"</code></pre>

</li>
<li>
<p>The script creates a copy job that mounts the cas specific backup persistent volume claim and the sas-common-backup-data persistent volume claim. Check for the sas-backup-pv-copy-job pod that is created.</p>
<pre class="highlight"><code class="language-bash">kubectl -n name-of-namespace get pod | grep -i sas-backup-pv-copy</code></pre>

</li>
</ol>
<p>If you do not see the results you expect, see the console output of the sas-backup-pv-copy-cleanup.sh script.</p>
<p>The copy job pod mounts two persistent volume claims per CAS instance. The &lsquo;sas-common-backup-data&rsquo; PVC is mounted at &lsquo;/sasviyabackup&rsquo; and the &lsquo;sas-cas-backup-data&rsquo; PVC is mounted at &lsquo;/cas&rsquo;.</p>
<h2 id="140228096910624scaling-cas-deployments">Scaling CAS Deployments</h2>
<p>To scale up the CAS deployments that are used to restore CAS data for each CAS instance, execute the scale-up-cas.sh bash script with two arguments: namespace and a comma-separated list of CAS instances.</p>
<pre class="highlight"><code class="language-bash">./scale-up-cas.sh [namespace] "[CAS instances list]"</code></pre>

<p>Here is an example:</p>
<pre class="highlight"><code class="language-bash">./scale-up-cas.sh viya04 "default"</code></pre>

<p><strong>Note:</strong> The default CAS instance name is &ldquo;default&rdquo; if the user has not changed it.</p>
<p>Ensure that all the required sas-cas-controller pods are scaled up, especially if you have multiple CAS controllers.</p>
<h2 id="140228096910624granting-security-context-constraints-for-copy-and-cleanup-job-on-an-openshift-cluster">Granting Security Context Constraints for Copy and Cleanup Job on an OpenShift Cluster</h2>
<p>The <code>$deploy/sas-bases/examples/restore/scripts/openshift</code> directory contains a file to grant security context constraints (SCCs) for the sas-backup-pv-copy-cleanup-job pod on an OpenShift cluster.
If you enable host launch on an OpenShift cluster, use the <code>sas-backup-pv-copy-cleanup-job-scc.yaml</code> SCC.
If you did not enable host launch on an OpenShift cluster and are facing issues related to file deletion, use the <code>sas-backup-pv-copy-cleanup-job-scc-fsgroup.yaml</code> SCC.</p>
<p><strong>Note:</strong> The security context constraint needs to be applied only if CAS is configured to allow for host identity.</p>
<ol>
<li>
<p>Use one of the following commands to apply the SCCs.</p>
<p>Using kubectl</p>
<pre class="highlight"><code class="language-sh">kubectl apply -f sas-backup-pv-copy-cleanup-job-scc.yaml</code></pre>

<p>or</p>
<pre class="highlight"><code class="language-sh">kubectl apply -f sas-backup-pv-copy-cleanup-job-scc-fsgroup.yaml</code></pre>

<p>Using the OpenShift CLI</p>
<pre class="highlight"><code class="language-sh">oc create -f sas-backup-pv-copy-cleanup-job-scc.yaml</code></pre>

<p>or</p>
<pre class="highlight"><code class="language-sh">oc create -f sas-backup-pv-copy-cleanup-job-scc-fsgroup.yaml</code></pre>

</li>
<li>
<p>Use the following command to link the SCCs to the appropriate Kubernetes service account.
Replace the entire variable {{ NAME-OF-NAMESPACE }}, including the braces, with the Kubernetes namespace used for the SAS Viya platform.</p>
<pre class="highlight"><code class="language-sh">oc -n {{ NAME-OF-NAMESPACE }} adm policy add-scc-to-user sas-backup-pv-copy-cleanup-job -z sas-viya-backuprunner</code></pre>

</li>
</ol>
    </body>
</html>