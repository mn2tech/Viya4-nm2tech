
---
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations:
    sas.com/kustomize-base: base
  name: sas-workload-orchestrator

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    sas.com/kustomize-base: base
  labels:
    sas.com/admin: cluster-wide
  name: sas-workload-orchestrator
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - get
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - patch
- apiGroups:
  - ""
  resources:
  - podtemplates
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - pods
  - pods/finalizers
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - get

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    sas.com/kustomize-base: base
  labels:
    sas.com/admin: cluster-local
  name: sas-workload-orchestrator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sas-workload-orchestrator
subjects:
- kind: ServiceAccount
  name: sas-workload-orchestrator

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
  labels:
    app.kubernetes.io/name: sas-workload-orchestrator
    sas.com/admin: namespace
    sas.com/registry-sync: default
  name: sas-workload-orchestrator
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: sas-workload-orchestrator-manager
  type: ClusterIP

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/kustomize-base: base
    sas.com/pod-uses-db-migrator: "true"
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/component: sas-workload-orchestrator-manager
    app.kubernetes.io/name: sas-workload-orchestrator
    sas.com/admin: namespace
    workload.sas.com/class: stateful
  name: sas-workload-orchestrator
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-workload-orchestrator
  serviceName: sas-workload-orchestrator
  template:
    metadata:
      annotations:
        sas.com/certificate-file-format: pem
        sas.com/kustomize-base: base
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-workload-orchestrator
        app.kubernetes.io/component: sas-workload-orchestrator-manager
        app.kubernetes.io/name: sas-workload-orchestrator
        workload.sas.com/class: stateful
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateful
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateless
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution: []
          requiredDuringSchedulingIgnoredDuringExecution: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - sas-workload-orchestrator-manager
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: true
      containers:
      - env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-workload-orchestrator
        - name: SGMG_MANAGER_HOST
          value: "1"
        - name: SGMG_LOGCONFIG_FILE
          value: logconfig.xml
        - name: SASCLOUDNATIVE
          value: "1"
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        envFrom:
        - configMapRef:
            name: sas-shared-config
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-workload-orchestrator-parameters
        - configMapRef:
            name: sas-workload-orchestrator-initial-configuration
        - secretRef:
            name: sas-workload-orchestrator-passphrase
        - configMapRef:
            name: sas-go-config
        image: sas-workload-orchestrator
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /opt/sas/viya/config/etc/sgmg/default/sgmgTerm.sh
        name: sas-workload-orchestrator
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /internal/ready
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        resources:
          limits:
            cpu: 1000m
            memory: 4Gi
          requests:
            cpu: 1000m
            memory: 4Gi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /scripts
          name: scripts
        - mountPath: /opt/sas/viya/config/var/log/sgmg/default
          name: config-var-log
        - mountPath: /opt/sas/viya/config/var/run/sgmg/default
          name: config-var-run
        - mountPath: /tmp
          name: temp-dir
      imagePullSecrets: []
      initContainers:
      - args:
        - cp -rf /opt/sas/viya/config/etc/sgmg/default/meta /data
        command:
        - /bin/sh
        - -c
        image: sas-workload-orchestrator
        imagePullPolicy: IfNotPresent
        name: hydrator
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - env:
        - name: SAS_SERVICE_NAME
          value: sas-workload-orchestrator
        envFrom:
        - configMapRef:
            name: sas-shared-config
        - configMapRef:
            name: sas-java-config
        - secretRef:
            name: sas-consul-client
        image: sas-db-migrator
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - env:
        - name: SAS_KEYS_SECRET_NAME
          value: sas-workload-orchestrator-passphrase
        - name: SAS_KEYS_KEY_NAMES
          value: SGMG_PASSPHRASE
        - name: SAS_SECURITY_ARTIFACTS_DIR
          value: /security
        image: sas-certframe
        name: sas-certframe-passphrase-generator
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /security
          name: security
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: sas-workload-orchestrator
      terminationGracePeriodSeconds: 60
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - emptyDir: {}
        name: scripts
      - emptyDir: {}
        name: shared-vol
      - emptyDir: {}
        name: security
      - emptyDir: {}
        name: config-var-log
      - emptyDir: {}
        name: config-var-run
      - emptyDir: {}
        name: temp-dir

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
  name: sas-workload-orchestrator
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-workload-orchestrator

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/kustomize-base: base
  labels:
    app.kubernetes.io/component: sas-workload-orchestrator-daemon
    app.kubernetes.io/name: sas-workload-orchestrator
    sas.com/admin: namespace
    workload.sas.com/class: compute
  name: sas-workload-orchestrator
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: sas-workload-orchestrator-daemon
  template:
    metadata:
      annotations:
        sas.com/certificate-file-format: pem
        sas.com/kustomize-base: base
      labels:
        app: sas-workload-orchestrator
        app.kubernetes.io/component: sas-workload-orchestrator-daemon
        app.kubernetes.io/name: sas-workload-orchestrator
        workload.sas.com/class: compute
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution: []
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - compute
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution: []
          requiredDuringSchedulingIgnoredDuringExecution: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution: []
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: true
      containers:
      - env:
        - name: SGMG_MANAGER_HOST
          value: "0"
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-workload-orchestrator
        - name: SGMG_LOGCONFIG_FILE
          value: logconfig.xml
        - name: SASCLOUDNATIVE
          value: "1"
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        envFrom:
        - configMapRef:
            name: sas-shared-config
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-workload-orchestrator-parameters
        - configMapRef:
            name: sas-workload-orchestrator-initial-configuration
        - secretRef:
            name: sas-workload-orchestrator-passphrase
        - configMapRef:
            name: sas-go-config
        image: sas-workload-orchestrator
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /opt/sas/viya/config/etc/sgmg/default/sgmgTerm.sh
        name: sas-workload-orchestrator
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /internal/ready
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        resources:
          limits:
            cpu: 100m
            memory: 250Mi
          requests:
            cpu: 100m
            memory: 250Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /scripts
          name: scripts
        - mountPath: /opt/sas/viya/config/var/log/sgmg/default
          name: config-var-log
        - mountPath: /opt/sas/viya/config/var/run/sgmg/default
          name: config-var-run
        - mountPath: /tmp
          name: temp-dir
      imagePullSecrets: []
      initContainers:
      - env:
        - name: SAS_KEYS_SECRET_NAME
          value: sas-workload-orchestrator-passphrase
        - name: SAS_KEYS_KEY_NAMES
          value: SGMG_PASSPHRASE
        - name: SAS_SECURITY_ARTIFACTS_DIR
          value: /security
        image: sas-certframe
        name: sas-certframe-passphrase-generator
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /security
          name: security
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: sas-workload-orchestrator
      terminationGracePeriodSeconds: 60
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: compute
      volumes:
      - emptyDir: {}
        name: scripts
      - emptyDir: {}
        name: security
      - emptyDir: {}
        name: config-var-log
      - emptyDir: {}
        name: config-var-run
      - emptyDir: {}
        name: temp-dir
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 100%
    type: RollingUpdate
