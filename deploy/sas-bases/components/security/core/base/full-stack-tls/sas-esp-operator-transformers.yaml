---
apiVersion: builtin
kind: PatchTransformer
metadata:
  name: sas-base-deployment-sas-esp-operator-full-stack-tls-transformer
patch: |-
  - op: add
    path: /spec/template/spec/initContainers/0
    value:
      name: sas-certframe
      image: sas-certframe
      env:
      - name: KUBE_POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: SAS_CERTFRAME_TOKEN_DIR
        value: /certframe-token
      - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
        value: /customer-provided-ca-certificates
      envFrom:
      - configMapRef:
          name: sas-certframe-config
      - configMapRef:
          name: sas-certframe-ingress-certificate-config
      - configMapRef:
          name: sas-certframe-user-config
      volumeMounts:
      - name: certframe-token
        mountPath: /certframe-token
      - name: security
        mountPath: /security
      - name: customer-provided-ca-certificates
        mountPath: /customer-provided-ca-certificates
      resources:
        requests:
          memory: "50Mi"
          cpu: "50m"
        limits:
          memory: "500Mi"
          cpu: "500m"
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        privileged: false
        readOnlyRootFilesystem: true
  - op: add
    path: /spec/template/spec/volumes/-
    value:
      name: certframe-token
      secret:
        secretName: sas-certframe-token
  - op: add
    path: /spec/template/spec/volumes/-
    value:
      name: security
      emptyDir: {}
  - op: add
    path: /spec/template/spec/volumes/-
    value:
      name: customer-provided-ca-certificates
      configMap:
        name: sas-customer-provided-ca-certificates
  - op: add
    path: /spec/template/spec/containers/0/volumeMounts/-
    value:
      name: security
      mountPath: /security
  - op: add
    path: /spec/template/spec/containers/0/volumeMounts/-
    value:
      name: security
      mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
      subPath: cacerts
  - op: add
    path: /spec/template/spec/containers/0/volumeMounts/-
    value:
      name: security
      mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
      subPath: private
  - op: add
    path: /spec/template/metadata/annotations/sas.com~1tls-enabled-ports
    value: all
  - op: replace
    path: /spec/template/metadata/annotations/prometheus.io~1scheme
    value: https
  - op: add
    path: /spec/template/metadata/annotations/sas.com~1tls-mode
    value: full-stack
  - op: add
    path: /metadata/annotations/sas.com~1tls-mode
    value: full-stack
  - op: add
    path: /spec/template/spec/containers/0/envFrom/0
    value:
      configMapRef:
        name: sas-tls-config
target:
  kind: Deployment
  name: sas-esp-operator
---
apiVersion: builtin
kind: PatchTransformer
metadata:
  name: sas-esp-operator-prometheus-annotation-tls-fullstack-transformer
patch: |-
  - op: replace
    path: /spec/template/metadata/annotations/prometheus.io~1scheme
    value: http
target:
  kind: Deployment
  name: sas-esp-operator
---
apiVersion: builtin
kind: PatchTransformer
metadata:
  name: sas-espconfig-full-stack-tls-transformer
patch: |-
  - op: add
    path: /spec/projectTemplate/deployment/spec/template/spec/initContainers/0
    value:
      name: sas-certframe
      image: sas-certframe
      env:
      - name: KUBE_POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: SAS_CERTFRAME_TOKEN_DIR
        value: /certframe-token
      - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
        value: /customer-provided-ca-certificates
      envFrom:
      - configMapRef:
          name: sas-certframe-ingress-certificate-config
      - configMapRef:
          name: sas-certframe-user-config
      - configMapRef:
          name: sas-certframe-config
      volumeMounts:
      - name: certframe-token
        mountPath: /certframe-token
      - name: security
        mountPath: /security
      - name: customer-provided-ca-certificates
        mountPath: /customer-provided-ca-certificates
      resources:
        requests:
          memory: "50Mi"
          cpu: "50m"
        limits:
          memory: "500Mi"
          cpu: "500m"
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        privileged: false
        readOnlyRootFilesystem: true
  - op: add
    path: /spec/projectTemplate/deployment/spec/template/spec/containers/0/envFrom/-
    value:
      configMapRef:
        name: sas-tls-config
  - op: replace
    path: /spec/projectTemplate/deployment/spec/template/spec/containers/0/readinessProbe/httpGet/scheme
    value: HTTPS
  - op: add
    path: /spec/projectTemplate/deployment/spec/template/spec/containers/0/volumeMounts/-
    value:
      name: security
      mountPath: /security
  - op: add
    path: /spec/projectTemplate/deployment/spec/template/spec/containers/0/volumeMounts/-
    value:
      name: security
      mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
      subPath: cacerts
  - op: add
    path: /spec/projectTemplate/deployment/spec/template/spec/containers/0/volumeMounts/-
    value:
      name: security
      mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
      subPath: private
  - op: add
    path: /spec/projectTemplate/deployment/spec/template/spec/volumes/-
    value:
      name: certframe-token
      secret:
        secretName: sas-certframe-token
  - op: add
    path: /spec/projectTemplate/deployment/spec/template/spec/volumes/-
    value:
      name: security
      emptyDir: {}
  - op: add
    path: /spec/projectTemplate/deployment/spec/template/spec/volumes/-
    value:
      name: customer-provided-ca-certificates
      configMap:
        name: sas-customer-provided-ca-certificates
  - op: add
    path: /spec/loadBalancerTemplate/deployment/spec/template/spec/initContainers/0
    value:
      name: sas-certframe
      image: sas-certframe
      env:
      - name: KUBE_POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: SAS_CERTFRAME_TOKEN_DIR
        value: /certframe-token
      - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
        value: /customer-provided-ca-certificates
      envFrom:
      - configMapRef:
          name: sas-certframe-ingress-certificate-config
      - configMapRef:
          name: sas-certframe-user-config
      - configMapRef:
          name: sas-certframe-config
      volumeMounts:
      - name: certframe-token
        mountPath: /certframe-token
      - name: security
        mountPath: /security
      - name: customer-provided-ca-certificates
        mountPath: /customer-provided-ca-certificates
      resources:
        requests:
          memory: "50Mi"
          cpu: "50m"
        limits:
          memory: "500Mi"
          cpu: "500m"
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        privileged: false
        readOnlyRootFilesystem: true
  - op: add
    path: /spec/loadBalancerTemplate/deployment/spec/template/spec/containers/0/envFrom/-
    value:
      configMapRef:
        name: sas-tls-config
  - op: replace
    path: /spec/loadBalancerTemplate/deployment/spec/template/spec/containers/0/readinessProbe/httpGet/scheme
    value: HTTPS
  - op: add
    path: /spec/loadBalancerTemplate/deployment/spec/template/spec/containers/0/volumeMounts/-
    value:
      name: security
      mountPath: /security
  - op: add
    path: /spec/loadBalancerTemplate/deployment/spec/template/spec/containers/0/volumeMounts/-
    value:
      name: security
      mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
      subPath: cacerts
  - op: add
    path: /spec/loadBalancerTemplate/deployment/spec/template/spec/containers/0/volumeMounts/-
    value:
      name: security
      mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
      subPath: private
  - op: add
    path: /spec/loadBalancerTemplate/deployment/spec/template/spec/containers/1/env/-
    value:
      name: ESPLB_TLS
      value: "true"
  - op: add
    path: /spec/loadBalancerTemplate/deployment/spec/template/spec/volumes/-
    value:
      name: certframe-token
      secret:
        secretName: sas-certframe-token
  - op: add
    path: /spec/loadBalancerTemplate/deployment/spec/template/spec/volumes/-
    value:
      name: security
      emptyDir: {}
  - op: add
    path: /spec/loadBalancerTemplate/deployment/spec/template/spec/volumes/-
    value:
      name: customer-provided-ca-certificates
      configMap:
        name: sas-customer-provided-ca-certificates
  - op: add
    path: /spec/routerTemplate/deployment/spec/template/spec/initContainers/0
    value:
      name: sas-certframe
      image: sas-certframe
      env:
      - name: KUBE_POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: SAS_CERTFRAME_TOKEN_DIR
        value: /certframe-token
      - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
        value: /customer-provided-ca-certificates
      envFrom:
      - configMapRef:
          name: sas-certframe-ingress-certificate-config
      - configMapRef:
          name: sas-certframe-user-config
      - configMapRef:
          name: sas-certframe-config
      volumeMounts:
      - name: certframe-token
        mountPath: /certframe-token
      - name: security
        mountPath: /security
      - name: customer-provided-ca-certificates
        mountPath: /customer-provided-ca-certificates
      resources:
        requests:
          memory: "50Mi"
          cpu: "50m"
        limits:
          memory: "500Mi"
          cpu: "500m"
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        privileged: false
        readOnlyRootFilesystem: true
  - op: add
    path: /spec/routerTemplate/deployment/spec/template/spec/containers/0/envFrom/-
    value:
      configMapRef:
        name: sas-tls-config
  - op: replace
    path: /spec/routerTemplate/deployment/spec/template/spec/containers/0/readinessProbe/httpGet/scheme
    value: HTTPS
  - op: add
    path: /spec/routerTemplate/deployment/spec/template/spec/containers/0/volumeMounts/-
    value:
      name: security
      mountPath: /security
  - op: add
    path: /spec/routerTemplate/deployment/spec/template/spec/containers/0/volumeMounts/-
    value:
      name: security
      mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
      subPath: cacerts
  - op: add
    path: /spec/routerTemplate/deployment/spec/template/spec/containers/0/volumeMounts/-
    value:
      name: security
      mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
      subPath: private
  - op: add
    path: /spec/routerTemplate/deployment/spec/template/spec/volumes/-
    value:
      name: certframe-token
      secret:
        secretName: sas-certframe-token
  - op: add
    path: /spec/routerTemplate/deployment/spec/template/spec/volumes/-
    value:
      name: security
      emptyDir: {}
  - op: add
    path: /spec/routerTemplate/deployment/spec/template/spec/volumes/-
    value:
      name: customer-provided-ca-certificates
      configMap:
        name: sas-customer-provided-ca-certificates
  - op: add
    path: /spec/espProperties/security.http_ssl_enabled
    value: "true"
  - op: add
    path: /spec/espProperties/security.pubsub_ssl_enabled
    value: "true"
  - op: add
    path: /spec/espProperties/env.security.server.server_cert_file
    value: "SAS_CERTIFICATE_FILE"
  - op: add
    path: /spec/espProperties/env.security.server.server_key_file
    value: "SAS_CERTIFICATE_PRIVATE_KEY_FILE"
  - op: replace
    path: /spec/espProperties/meta.meteringport
    value: "443"
  - op: replace
    path: /spec/espProperties/meta.meteringhost
    value: "https://sas-event-stream-processing-metering-app"
  - op: replace
    path: /spec/espProperties/security.oauth2.client.server_url
    value: "https://sas-logon-app/SASLogon/oauth/token"
  - op: replace
    path: /metadata/annotations/sas.com~1tls-mode
    value: full-stack
  - op: add
    path: /metadata/annotations/sas.com~1tls-enabled-ports
    value: all
  - op: add
    path: /spec/projectTemplate/deployment/spec/template/metadata/annotations/sas.com~1tls-mode
    value: full-stack
  - op: add
    path: /spec/projectTemplate/deployment/spec/template/metadata/annotations/sas.com~1tls-enabled-ports
    value: all
  - op: replace
    path: /spec/projectTemplate/deployment/spec/template/metadata/annotations/prometheus.io~1scheme
    value: https
  - op: add
    path: /spec/loadBalancerTemplate/deployment/spec/template/metadata/annotations/sas.com~1tls-mode
    value: full-stack
  - op: add
    path: /spec/loadBalancerTemplate/deployment/spec/template/metadata/annotations/sas.com~1tls-enabled-ports
    value: all
  - op: replace
    path: /spec/loadBalancerTemplate/deployment/spec/template/metadata/annotations/prometheus.io~1scheme
    value: https
  - op: add
    path: /spec/routerTemplate/deployment/spec/template/metadata/annotations/sas.com~1tls-mode
    value: full-stack
  - op: add
    path: /spec/routerTemplate/deployment/spec/template/metadata/annotations/sas.com~1tls-enabled-ports
    value: all
  - op: replace
    path: /spec/routerTemplate/deployment/spec/template/metadata/annotations/prometheus.io~1scheme
    value: https
  - op: add
    path: /spec/projectTemplate/ingress/metadata/annotations/nginx.ingress.kubernetes.io~1backend-protocol
    value: HTTPS
  - op: add
    path: /spec/projectTemplate/ingress/spec/tls
    value: [{hosts: [((PUBLIC_HOST_NAME))], secretName: sas-ingress-certificate}]
  - op: replace
    path: /spec/projectTemplate/ingress/spec/rules/0/http/paths/0/backend/service/port/number
    value: 443
  - op: replace
    path: /spec/projectTemplate/httpService/spec/ports/0/port
    value: 443
  - op: replace
    path: /spec/projectTemplate/httpService/metadata/annotations/prometheus.io~1port
    value: "443"
  - op: replace
    path: /spec/projectTemplate/httpService/metadata/annotations/prometheus.io~1scheme
    value: "https"
target:
  kind: ESPConfig
