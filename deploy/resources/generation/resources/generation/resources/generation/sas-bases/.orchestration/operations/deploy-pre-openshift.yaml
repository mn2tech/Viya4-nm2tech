apiVersion: orchestration.sas.com/v2beta10
kind: LifecycleOperation
metadata:
  annotations:
    sas.com/component-name: sas-k8s-common
    sas.com/component-version: 2.99.0-20250311.1741724729436
  creationTimestamp: null
  labels:
    participate.lifecycle.sas.com/deploy-pre: "true"
  name: deploy-pre-openshift
spec:
  args:
  - name: namespace
    required: true
  - name: manifest
    required: true
  - name: timeout
    required: true
  - name: serviceAccountName
  steps:
  - args:
    - sas.com/route-permissions
    - "true"
    cmd: set_variable
    when: |-
      (and
        $serviceAccountName
        (.ManifestResources $manifest ((((.NewManifestResourcesIterationSpec).WithGroup "route.openshift.io").WithVersion "v1").WithKind "Route")))
  - args:
    - delete
    - --namespace
    - $namespace
    - --wait
    - --timeout
    - $timeout
    - --ignore-not-found
    - role
    - sas-predeploy-openshift-route
    cmd: kubectl
    when: (.GetVariable "sas.com/route-permissions")
  - args:
    - create
    - --namespace
    - $namespace
    - role
    - sas-predeploy-openshift-route
    - --verb
    - get,create,update,patch
    - --resource
    - route.route.openshift.io/custom-host
    cmd: kubectl
    when: (.GetVariable "sas.com/route-permissions")
  - args:
    - delete
    - --namespace
    - $namespace
    - --wait
    - --timeout
    - $timeout
    - --ignore-not-found
    - rolebinding
    - sas-predeploy-openshift-route
    cmd: kubectl
    when: (.GetVariable "sas.com/route-permissions")
  - args:
    - create
    - --namespace
    - $namespace
    - rolebinding
    - sas-predeploy-openshift-route
    - --role
    - sas-predeploy-openshift-route
    - --serviceaccount
    - (print $namespace ":" $serviceAccountName)
    cmd: kubectl
    when: (.GetVariable "sas.com/route-permissions")
